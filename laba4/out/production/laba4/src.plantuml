@startuml

title __SRC's Class Diagram__\n

  package  {
    abstract class AccountingSystem {
        + getCurrAmountOfRequests()
        + setCurrAmountOfRequests()
        + getCurrAmountOfReaders()
        + setCurrAmountOfReaders()
        + getBooks()
        + setBooks()
        + getReaders()
        + setReaders()
        + getRequests()
        + setRequests()
        + AccountingSystem()
    }
  }
  

  package  {
    class Book {
        - title : String
        - isAvailiable : boolean
        - currentHolder : String
        - isInLibrary : boolean
        - timeOfRent : long
        + Book()
        + Book()
        + getTitle()
        + setTitle()
        + isAvailiable()
        + setAvailiable()
        + getCurrentHolder()
        + setCurrentHolder()
        + isInLibrary()
        + setInLibrary()
        + getTimeOfRent()
        + setTimeOfRent()
        + toString()
    }
  }
  

  package  {
    class BookRequest {
        - id : int
        - title : String
        - orderer : String
        - isValid : boolean
        + getId()
        + setId()
        + getTitle()
        + setTitle()
        + getOrderer()
        + setOrderer()
        + isValid()
        + setValid()
        + BookRequest()
        + BookRequest()
    }
  }
  

  package  {
    class Librarian {
        ~ scanner : Scanner
        + giveBook()
        + giveBook()
        + addToBlackList()
        + checkOutdatedRents()
        + takeBook()
    }
  }
  

  package  {
    class LibrarianAccountingSystem {
        + processRent()
        + processRent()
        + checkOutdates()
        + addToBlackList()
        + addToBlackList()
        + returnBook()
    }
  }
  

  package  {
    class LibraryDB {
        {static} - libraryDB : LibraryDB
        - currAmountOfRequests : int
        - currAmountOfReaders : int
        - books : Book[]
        - readers : Reader[]
        - requests : BookRequest[]
        {static} + getInstance()
        {static} + getLibraryDB()
        {static} + setLibraryDB()
        + getCurrAmountOfRequests()
        + setCurrAmountOfRequests()
        + getCurrAmountOfReaders()
        + setCurrAmountOfReaders()
        + getBooks()
        + setBooks()
        + getReaders()
        + setReaders()
        + getRequests()
        + setRequests()
        - LibraryDB()
    }
  }
  

  package  {
    class Main {
        {static} - scanner : Scanner
        {static} + main()
        {static} - chooseRole()
        {static} - readerCycle()
        {static} - librarianCycle()
        {static} - printLibrarianInfo()
        {static} - printReaderInfo()
    }
  }
  

  package  {
    class Reader {
        - name : String
        - isInBlackList : boolean
        + isInBlackList()
        + setInBlackList()
        + Reader()
        + Reader()
        + Reader()
        + getName()
        + setName()
        + sendRequest()
        + getBook()
        + returnBook()
    }
  }
  

  package  {
    class UserAccountingSystem {
        + processRequest()
        - isInBlackList()
        + createNewOrder()
        + checkRegistrity()
    }
  }
  

  Librarian o-- LibrarianAccountingSystem : accountingSystem
  LibrarianAccountingSystem -up-|> AccountingSystem
  Reader o-- UserAccountingSystem : accountingSystem
  Reader o-- Librarian : librarian
  UserAccountingSystem -up-|> AccountingSystem


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
